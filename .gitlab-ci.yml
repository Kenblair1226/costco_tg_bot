default:
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY

stages:
  # - lint
  # - test
  - build
  - release

.go-cache:
    variables:
        GOPATH: $CI_PROJECT_DIR/.go
    cache:
      paths:
        - .go/pkg/mod/

variables:
  OUTPUT_NAME: __bin__/$CI_PROJECT_NAME
    # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

# lint:
#     image: golangci/golangci-lint:latest
#     stage: lint
#     extends: .go-cache
#     allow_failure: false
#     script:
#       - golangci-lint run -v --show-stats --no-config --timeout=2m
#     variables:
#       GOCACHE: ${CI_PROJECT_DIR}/vendor/cache
#       GOPATH: ${CI_PROJECT_DIR}/vendor/go
#       GOLANGCI_LINT_CACHE: ${CI_PROJECT_DIR}/vendor/linter-cache
#     cache:
#       key: lintercache
#       paths:
#         - vendor/go/pkg/mod/
#         - vendor/cache
#         - vendor/linter-cache

# test:
#   stage: test
#   script:
#     - go fmt $(go list ./... | grep -v /vendor/)
#     - go vet $(go list ./... | grep -v /vendor/)
#     - go test -race $(go list ./... | grep -v /vendor/)


build_image:
  stage: build
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
  only:
    - main

release_image:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - main